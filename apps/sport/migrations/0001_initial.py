# Generated by Django 2.0.8 on 2018-12-20 03:39

import XServer.settings
from django.db import migrations, models
import django.db.models.deletion
import sport.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Action',
            fields=[
                ('aid', models.IntegerField(help_text='动作id', primary_key=True, serialize=False, verbose_name='动作id')),
                ('videoRes', models.CharField(default='', help_text='视频链接', max_length=200, verbose_name='视频链接')),
                ('actionName', models.CharField(default='', help_text='动作名称', max_length=100, verbose_name='动作名称')),
                ('doItRight', models.TextField(default='', help_text='doItRight', verbose_name='doItRight')),
                ('breathing', models.TextField(default='', help_text='breathing', verbose_name='breathing')),
                ('videoSize', models.IntegerField(default=0, help_text='视频大小', verbose_name='视频大小')),
                ('imgCover', models.CharField(default='', help_text='封面图', max_length=200, verbose_name='封面图')),
                ('duration', models.IntegerField(default=30, help_text='单次时长', verbose_name='单次时长')),
                ('repeatCount', models.IntegerField(default=1, help_text='重复次数', verbose_name='重复次数')),
                ('imgLocal', models.CharField(default='', help_text='本地地址', max_length=200, verbose_name='本地地址')),
            ],
            options={
                'verbose_name': '动作',
                'verbose_name_plural': '动作',
                'db_table': 'sport_action',
            },
        ),
        migrations.CreateModel(
            name='Challenge',
            fields=[
                ('challengeId', models.IntegerField(help_text='课程id', primary_key=True, serialize=False, unique=True, verbose_name='课程id')),
                ('challengeName', models.CharField(help_text='课程名称', max_length=100, verbose_name='课程名称')),
                ('imgCover', models.CharField(default='', help_text='封面图', max_length=200, verbose_name='封面图')),
                ('level', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], help_text='课程等级', verbose_name='课程等级')),
                ('pgmIds', models.CharField(help_text='课程ids', max_length=150, verbose_name='课程ids')),
            ],
            options={
                'verbose_name': '挑战课程',
                'verbose_name_plural': '挑战课程',
                'db_table': 'sport_challenge',
            },
        ),
        migrations.CreateModel(
            name='ChallengeSort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.IntegerField(default=0, help_text='排序字段', verbose_name='排序字段')),
                ('challenge', models.ForeignKey(help_text='所属挑战课程', on_delete=django.db.models.deletion.CASCADE, to='sport.Challenge', verbose_name='所属挑战课程')),
            ],
            options={
                'verbose_name': '挑战课程排序',
                'verbose_name_plural': '挑战课程排序',
                'db_table': 'sport_challenge_sort',
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imgType', models.IntegerField(choices=[(1, '普通封面图'), (2, '视频封面')], default=1, help_text='图片类型', verbose_name='图片类型')),
                ('img', models.ImageField(help_text='图片', storage=XServer.settings.ImageStorage(), upload_to=sport.models.Image.get_photo_path, verbose_name='图片')),
            ],
            options={
                'verbose_name': '图片',
                'verbose_name_plural': '图片',
                'db_table': 'sport_image',
            },
        ),
        migrations.CreateModel(
            name='LanguageAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actionName', models.CharField(default='', help_text='动作名称', max_length=100, verbose_name='动作名称')),
                ('doItRight', models.TextField(default='', help_text='doItRight', verbose_name='doItRight')),
                ('breathing', models.TextField(default='', help_text='breathing', verbose_name='breathing')),
                ('action', models.ForeignKey(help_text='所属动作', on_delete=django.db.models.deletion.CASCADE, to='sport.Action', verbose_name='所属动作')),
            ],
            options={
                'verbose_name': '动作多语言',
                'verbose_name_plural': '动作多语言',
                'db_table': 'sport_language_action',
            },
        ),
        migrations.CreateModel(
            name='LanguageBase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(help_text='语言', max_length=20, verbose_name='语言')),
            ],
            options={
                'verbose_name': '语言',
                'verbose_name_plural': '语言',
            },
        ),
        migrations.CreateModel(
            name='LanguageChallenge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('challengeName', models.CharField(help_text='课程名称', max_length=100, verbose_name='课程名称')),
                ('challenge', models.ForeignKey(help_text='所属挑战课程', on_delete=django.db.models.deletion.CASCADE, to='sport.Challenge', verbose_name='所属挑战课程')),
                ('language', models.ForeignKey(help_text='语言', on_delete=django.db.models.deletion.CASCADE, to='sport.LanguageBase', verbose_name='语言')),
            ],
            options={
                'verbose_name': '挑战课程多语言',
                'verbose_name_plural': '挑战课程多语言',
                'db_table': 'sport_language_challenge',
            },
        ),
        migrations.CreateModel(
            name='LanguageProgram',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('programName', models.CharField(default='', help_text='课程名称', max_length=100, verbose_name='课程名称')),
                ('programDesc', models.TextField(default='', help_text='课程描述', verbose_name='课程描述')),
                ('language', models.ForeignKey(help_text='语言', on_delete=django.db.models.deletion.CASCADE, to='sport.LanguageBase', verbose_name='语言')),
            ],
            options={
                'verbose_name': '课程多语言',
                'verbose_name_plural': '课程多语言',
                'db_table': 'sport_language_program',
            },
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('pgmId', models.IntegerField(help_text='课程id', primary_key=True, serialize=False, verbose_name='课程id')),
                ('programName', models.CharField(default='', help_text='课程名称', max_length=100, verbose_name='课程名称')),
                ('chargeType', models.IntegerField(choices=[(0, '免费'), (1, '收费或观看视频'), (2, '收费')], help_text='付费类型', verbose_name='付费类型')),
                ('totalTime', models.IntegerField(default=0, help_text='总时长', verbose_name='总时长')),
                ('kcal', models.IntegerField(default=0, help_text='卡路里', verbose_name='卡路里')),
                ('level', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], help_text='等级', verbose_name='等级')),
                ('programDesc', models.TextField(blank=True, default='', help_text='课程描述', null=True, verbose_name='课程描述')),
                ('pgmType', models.IntegerField(choices=[(0, '普通课程'), (1, '挑战课程')], help_text='课程类型', verbose_name='课程类型')),
                ('imgCover', models.CharField(blank=True, default='', help_text='封面图', max_length=200, null=True, verbose_name='封面图')),
                ('imgCoverBig', models.CharField(blank=True, default='', help_text='封面大图', max_length=200, null=True, verbose_name='封面大图')),
                ('restIndexArray', models.CharField(blank=True, default='', help_text='休息Index', max_length=100, null=True, verbose_name='休息Index')),
                ('actionIds', models.CharField(default='', help_text='课程ids', max_length=100, verbose_name='课程ids')),
                ('challenge', models.ForeignKey(blank=True, help_text='所属挑战课程', null=True, on_delete=django.db.models.deletion.CASCADE, to='sport.Challenge', verbose_name='所属挑战课程')),
            ],
            options={
                'verbose_name': '课程',
                'verbose_name_plural': '课程',
                'db_table': 'sport_program',
            },
        ),
        migrations.CreateModel(
            name='ProgramSort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.IntegerField(default=0, help_text='排序字段', verbose_name='排序字段')),
                ('program', models.ForeignKey(help_text='所属课程', on_delete=django.db.models.deletion.CASCADE, to='sport.Program', verbose_name='所属课程')),
            ],
            options={
                'verbose_name': '普通课程排序',
                'verbose_name_plural': '普通课程排序',
                'db_table': 'sport_program_sort',
            },
        ),
        migrations.AddField(
            model_name='languageprogram',
            name='program',
            field=models.ForeignKey(help_text='所属课程', on_delete=django.db.models.deletion.CASCADE, to='sport.Program', verbose_name='所属课程'),
        ),
        migrations.AddField(
            model_name='languageaction',
            name='language',
            field=models.ForeignKey(help_text='语言', on_delete=django.db.models.deletion.CASCADE, to='sport.LanguageBase', verbose_name='语言'),
        ),
        migrations.AlterUniqueTogether(
            name='languageprogram',
            unique_together={('language', 'program')},
        ),
        migrations.AlterUniqueTogether(
            name='languagechallenge',
            unique_together={('language', 'challenge')},
        ),
        migrations.AlterUniqueTogether(
            name='languageaction',
            unique_together={('language', 'action')},
        ),
    ]
